{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","updateText","Fragment","style","color","heading","value","onChange","e","target","backgroundColor","rows","upperText","showAlert","lowerText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ed880d9a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className\r\n      ={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className\r\n        =\"container-fluid\">\r\n        {/* <Link className\r\n          =\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n\r\n        <a className\r\n          =\"navbar-brand\" href=\"#\">{props.title} - Itachi</a>\r\n        <button className\r\n          =\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className\r\n            =\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className\r\n          =\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className\r\n              =\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className\r\n              =\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n\r\n          <div className=\"colorPallete mx-2\">\r\n            <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n              Color palette\r\n            </button>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Color Palette</h1>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  {/*\r\n                  <input className=\"form-check-input bg-primary p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onClick={props.toggleMode} checked />\r\n\r\n                  <input className=\"form-check-input bg-secondary p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked />\r\n\r\n                  <input className=\"form-check-input bg-success p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked />\r\n\r\n                  <input className=\"form-check-input bg-warning p-2 mx-2 \" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked />\r\n\r\n                  <input className=\"form-check-input bg-info p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked /> */}\r\n\r\n\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`form-check  mx-2 form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Default title\",\r\n  aboutText: \"About\"\r\n};","import React, { useState } from 'react'\r\nexport default function TextForm(props) {\r\n\r\n    // On change function to write in the text area\r\n    const handleOnChange = (e) => {\r\n        updateText(e.target.value);\r\n    }\r\n\r\n    // Convert text to upper case\r\n    const handleUpclick = () => {\r\n        let upperText = text.toUpperCase();\r\n        updateText(upperText);\r\n        props.showAlert(\"Converted to uppercase\", 'success');\r\n    }\r\n\r\n    // Convert text to lower case\r\n    const handleLoclick = () => {\r\n        let lowerText = text.toLowerCase();\r\n        updateText(lowerText);\r\n        props.showAlert(\"Converted to lowercase\", 'success');\r\n    }\r\n\r\n    // Clear the text\r\n    const handleClear = () => {\r\n        let clearText = '';\r\n        updateText(clearText);\r\n        props.showAlert(\"Text cleared\", 'success');\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", 'success');\r\n    }\r\n\r\n    const handleRemoveExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        updateText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed\", 'success');\r\n    }\r\n    const handleSpace = () => {\r\n        updateText(text.split('').join(' '));\r\n        props.showAlert(\"Add extra space\", 'success');\r\n    }\r\n    // text is variable settext is function and  is used for upate the variable\r\n    const [text, updateText] = useState('');\r\n\r\n    // text = \"New text\"; //Wrong way to update state\r\n    // setText(\"New text\"); //Correct way to update state\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <div className=\"mb-3\">\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className=\"form-control\" value={text} id=\"myBox\" onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#042743' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} rows=\"8\" placeholder='Enter text here'></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoclick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleRemoveExtraSpace}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-1 my-2\" onClick={handleSpace}>Add extra space</button>\r\n                <button className=\"btn btn-danger mx-1 my-2\" onClick={handleClear}>Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-2\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your summary</h2>\r\n                <p>{text.split(' ').length} words and {text.length} characters</p>\r\n                <p>In <span className='text-danger'>{0.008 * text.split(' ').length}</span> minutes you can finish to read</p>\r\n                <h3>Preview </h3>\r\n                <p>{text.length > 0 ? text : 'Enter something in the above textbox to preview it here.'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\nimport React from 'react'\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether the dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = ' #042743';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = \"Text utils - Dark mode\";\n\n      // trigerring the title just like the facebook\n      // setInterval(() => {\n      //   document.title = \"Text utils is amazing\";\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = \"Install text utils official app now\";\n      // }, 2000);\n\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = '#fff';\n      showAlert('Light mode has been enabled', 'success')\n      document.title = \"Text utils - Light mode\";\n\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils2\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar /> */}\n\n      {/* <Router> */}\n      <Navbar title=\"TextUtils2\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n        {/* <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />} /> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}