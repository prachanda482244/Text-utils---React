{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","myStyle","color","mode","backgroundColor","console","log","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","dist","to","title","aria-label","aria-current","aboutText","placeholder","tabIndex","aria-hidden","data-bs-dismiss","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","updateText","Fragment","heading","value","onChange","e","target","rows","upperText","showAlert","lowerText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","filter","element","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6a0e5f6d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        <div style={{ height: '40px' }}>\r\n            {\r\n                props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, updateMystyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // });\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#042743',\r\n        backgroundColor: props.mode === 'dark' ? 'rgb(36 74 104)' : 'white',\r\n    }\r\n    console.log(myStyle)\r\n    return (\r\n        <div className='container p-3' style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\"\r\n                            style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong> Analyse your text </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Text Utils gives you a way to analyse your text quickly and efficiently. Be it word count,character count.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" style={myStyle} aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong> Free to use </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Textutils is a free character counter tool that provides instant character count & word count statistics for a given text. Text utils reports the number of words and characters. Thus it is suitable for writing text with words/character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" style={myStyle} aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong> Browser Compatiable </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This word counter software works in any browser such as chrome , Firefox ,Internet explorer, safari,opera . It suits to count characters in facebook, blogs,books , excel document, pdf format,essays etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className\r\n      ={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className\r\n        =\"container-fluid\">\r\n        <Link className\r\n          =\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className\r\n          =\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className\r\n            =\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className\r\n          =\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className\r\n              =\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className\r\n              =\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n\r\n          <div className=\"colorPallete mx-2\">\r\n            <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n              Color palette\r\n            </button>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Color Palette</h1>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  {/*\r\n                  <input className=\"form-check-input bg-primary p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onClick={props.toggleMode} checked />\r\n\r\n                  <input className=\"form-check-input bg-secondary p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked />\r\n\r\n                  <input className=\"form-check-input bg-success p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked />\r\n\r\n                  <input className=\"form-check-input bg-warning p-2 mx-2 \" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked />\r\n\r\n                  <input className=\"form-check-input bg-info p-2 mx-2\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked /> */}\r\n\r\n\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`form-check  mx-2 form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Default title\",\r\n  aboutText: \"About\"\r\n};","import React, { useState } from 'react'\r\nexport default function TextForm(props) {\r\n\r\n    // On change function to write in the text area\r\n    const handleOnChange = (e) => {\r\n        updateText(e.target.value);\r\n    }\r\n\r\n    // Convert text to upper case\r\n    const handleUpclick = () => {\r\n        let upperText = text.toUpperCase();\r\n        updateText(upperText);\r\n        props.showAlert(\"Converted to uppercase\", 'success');\r\n    }\r\n\r\n    // Convert text to lower case\r\n    const handleLoclick = () => {\r\n        let lowerText = text.toLowerCase();\r\n        updateText(lowerText);\r\n        props.showAlert(\"Converted to lowercase\", 'success');\r\n    }\r\n\r\n    // Clear the text\r\n    const handleClear = () => {\r\n        let clearText = '';\r\n        updateText(clearText);\r\n        props.showAlert(\"Text cleared\", 'success');\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", 'success');\r\n    }\r\n\r\n    const handleRemoveExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        updateText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed\", 'success');\r\n    }\r\n    const handleSpace = () => {\r\n        updateText(text.split('').join(' '));\r\n        props.showAlert(\"Add extra space\", 'success');\r\n    }\r\n    // text is variable settext is function and  is used for upate the variable\r\n    const [text, updateText] = useState('');\r\n\r\n    // text = \"New text\"; //Wrong way to update state\r\n    // setText(\"New text\"); //Correct way to update state\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <div className=\"mb-3\">\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className=\"form-control\" value={text} id=\"myBox\" onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#042743' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} rows=\"8\" placeholder='Enter text here'></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoclick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleRemoveExtraSpace}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleSpace}>Add extra space</button>\r\n                <button className=\"btn btn-danger mx-1 my-1 \" onClick={handleClear}>Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-2\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your summary</h2>\r\n                <p>{text.split(' ').filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>In <span className='text-danger'>{0.008 * text.split(' ').length}</span> minutes you can finish to read</p>\r\n                <h3>Preview </h3>\r\n                <p>{text.length > 0 ? text : 'Enter something in the above textbox to preview it here.'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\nimport React from 'react'\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether the dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = ' #042743';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = \"Text utils - Dark mode\";\n\n      // trigerring the title just like the facebook\n      // setInterval(() => {\n      //   document.title = \"Text utils is amazing\";\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = \"Install text utils official app now\";\n      // }, 2000);\n\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = '#fff';\n      showAlert('Light mode has been enabled', 'success')\n      document.title = \"Text utils - Light mode\";\n\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils2\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar /> */}\n\n      <Router>\n        <Navbar title=\"TextUtils2\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />} />\n            <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}